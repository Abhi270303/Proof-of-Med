{"noir_version":"1.0.0-beta.1+03b58fa2dfcc8acc8cf5198b1b23b55676fbdb02","hash":17991435974159953515,"abi":{"parameters":[{"name":"doc_address","type":{"kind":"field"},"visibility":"public"},{"name":"client_address","type":{"kind":"field"},"visibility":"private"},{"name":"use_once","type":{"kind":"field"},"visibility":"private"},{"name":"freq","type":{"kind":"field"},"visibility":"private"},{"name":"med_details","type":{"kind":"array","length":10,"type":{"kind":"field"}},"visibility":"private"},{"name":"med_hash","type":{"kind":"field"},"visibility":"public"},{"name":"detail_hash","type":{"kind":"field"},"visibility":"public"},{"name":"hashed_message","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"pub_key_x_solver","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"pub_key_y_solver","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"signature_solver","type":{"kind":"array","length":64,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"}],"return_type":null,"error_types":{}},"bytecode":"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","debug_symbols":"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6xOihyZED03IfmhC9kOToYeyMPZDWRj7oSwMPZSFsR/KEpC5ZeihLAw/dRaGnzoLYz+UheGnzsrwU2dl7IeyMvzUWRl+6twdHXvb3DL81FkZfuqsjHtZVoafOivDT53GuJelMfzUaQw/dRrjXpbbg3TvmluGnzqNcS9LY9zL0hj3sjTIvcwhesgh+yGH3Mscood2ZxDf1ifkXuYQPeSQ/ZBD7mUO0UMB0UMB2Q8FZD8UED20Pb75rrmF7IcCoocCsh8KyH4oIHooIX7qhPipIfnUCcmnTkg+dULyqROST52QfOqE5FMnJJ86IfnUCcmnTkg+dULyqROST52QfOqE5FMnJJ86IfnUCcmnTkg+dULyqROST53b86m95aPP6z+yb24D0mdC+myQPjukzwHpczL63J5PfVefFdKnQfqE6KHt+dR39Xm0HlrHK+NoPbSOVwZED42j9dDCuT1aD62b2wnRQ/NoPbRubufRemjh3EL00PZ86rvm9mw9tG5uIfuhebQeWji3Z+uhdXPL2A+1crQeWja3rZyth1bNbSuM/VArR+uhhXMbkLll3MtaOXs/tG5uz9ZD6+aWcS9r5ez90LK5rWfroWVzWxn3slbP3g+tm9uz9dC6uQ3I3DLuZa0y7mXt+XzqbOPxM9P//DPPaotmj257m3/+mWef0308/czs//Uz11+++/j23bu3f//buw/fv/709sP7n68fvP7xP15/fPv6u3dvPv/1x1/ef/8f//bTP396/JvHz//08cP3b3745eOb33/Tv//d9ev/BQ==","file_map":{"19":{"source":"pub mod bn254;\nuse crate::runtime::is_unconstrained;\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size<let BIT_SIZE: u32>(self) {\n        // docs:end:assert_max_bit_size\n        assert(BIT_SIZE < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(BIT_SIZE);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_le_bits\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n    // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_be_bits\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32 - i] as Field) * (r * self) + (1 - b[32 - i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N - 1 - i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n/// An unconstrained only built in to efficiently compare fields.\n#[builtin(field_less_than)]\nunconstrained fn __field_less_than(x: Field, y: Field) -> bool {}\n\npub(crate) unconstrained fn field_less_than(x: Field, y: Field) -> bool {\n    __field_less_than(x, y)\n}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    if is_unconstrained() {\n        unsafe {\n            //@safety : unconstrained context\n            field_less_than(x, y)\n        }\n    } else {\n        let x_bytes: [u8; 32] = x.to_le_bytes();\n        let y_bytes: [u8; 32] = y.to_le_bytes();\n        let mut x_is_lt = false;\n        let mut done = false;\n        for i in 0..32 {\n            if (!done) {\n                let x_byte = x_bytes[32 - 1 - i] as u8;\n                let y_byte = y_bytes[32 - 1 - i] as u8;\n                let bytes_match = x_byte == y_byte;\n                if !bytes_match {\n                    x_is_lt = x_byte < y_byte;\n                    done = true;\n                }\n            }\n        }\n        x_is_lt\n    }\n}\n\nmod tests {\n    use super::field_less_than;\n\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_bytes();\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_bytes();\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_radix_example\n\n    #[test]\n    unconstrained fn test_field_less_than() {\n        assert(field_less_than(0, 1));\n        assert(field_less_than(0, 0x100));\n        assert(field_less_than(0x100, 0 - 1));\n        assert(!field_less_than(0 - 1, 0));\n    }\n}\n","path":"std/field/mod.nr"},"23":{"source":"// Instantiations of Poseidon permutation for the prime field of the same order as BN254\nuse crate::hash::poseidon::bn254::consts;\nuse crate::hash::poseidon::permute;\n\n#[field(bn254)]\npub fn x5_2(mut state: [Field; 2]) -> [Field; 2] {\n    state = permute(consts::x5_2_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_3(mut state: [Field; 3]) -> [Field; 3] {\n    state = permute(consts::x5_3_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_4(mut state: [Field; 4]) -> [Field; 4] {\n    state = permute(consts::x5_4_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_5(mut state: [Field; 5]) -> [Field; 5] {\n    state = permute(consts::x5_5_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_6(mut state: [Field; 6]) -> [Field; 6] {\n    state = permute(consts::x5_6_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_7(mut state: [Field; 7]) -> [Field; 7] {\n    state = permute(consts::x5_7_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_8(mut state: [Field; 8]) -> [Field; 8] {\n    state = permute(consts::x5_8_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_9(mut state: [Field; 9]) -> [Field; 9] {\n    state = permute(consts::x5_9_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_10(mut state: [Field; 10]) -> [Field; 10] {\n    state = permute(consts::x5_10_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_11(mut state: [Field; 11]) -> [Field; 11] {\n    state = permute(consts::x5_11_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_12(mut state: [Field; 12]) -> [Field; 12] {\n    state = permute(consts::x5_12_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_13(mut state: [Field; 13]) -> [Field; 13] {\n    state = permute(consts::x5_13_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_14(mut state: [Field; 14]) -> [Field; 14] {\n    state = permute(consts::x5_14_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_15(mut state: [Field; 15]) -> [Field; 15] {\n    state = permute(consts::x5_15_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_16(mut state: [Field; 16]) -> [Field; 16] {\n    state = permute(consts::x5_16_config(), state);\n\n    state\n}\n\n#[field(bn254)]\npub fn x5_17(mut state: [Field; 17]) -> [Field; 17] {\n    state = permute(consts::x5_17_config(), state);\n\n    state\n}\n","path":"std/hash/poseidon/bn254/perm.nr"},"24":{"source":"// Instantiations of Poseidon constants, permutations and sponge for prime field of the same order as BN254\npub mod perm;\npub mod consts;\n\nuse crate::hash::poseidon::absorb;\n\n// Variable-length Poseidon-128 sponge as suggested in second bullet point of section 3 of https://eprint.iacr.org/2019/458.pdf\n#[field(bn254)]\npub fn sponge<let N: u32>(msg: [Field; N]) -> Field {\n    absorb(consts::x5_5_config(), [0; 5], 4, 1, msg)[1]\n}\n\n// Various instances of the Poseidon hash function\n// Consistent with Circom's implementation\n#[no_predicates]\npub fn hash_1(input: [Field; 1]) -> Field {\n    let mut state = [0; 2];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_2(state)[0]\n}\n\n#[no_predicates]\npub fn hash_2(input: [Field; 2]) -> Field {\n    let mut state = [0; 3];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_3(state)[0]\n}\n\n#[no_predicates]\npub fn hash_3(input: [Field; 3]) -> Field {\n    let mut state = [0; 4];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_4(state)[0]\n}\n\n#[no_predicates]\npub fn hash_4(input: [Field; 4]) -> Field {\n    let mut state = [0; 5];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_5(state)[0]\n}\n\n#[no_predicates]\npub fn hash_5(input: [Field; 5]) -> Field {\n    let mut state = [0; 6];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_6(state)[0]\n}\n\n#[no_predicates]\npub fn hash_6(input: [Field; 6]) -> Field {\n    let mut state = [0; 7];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_7(state)[0]\n}\n\n#[no_predicates]\npub fn hash_7(input: [Field; 7]) -> Field {\n    let mut state = [0; 8];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_8(state)[0]\n}\n\n#[no_predicates]\npub fn hash_8(input: [Field; 8]) -> Field {\n    let mut state = [0; 9];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_9(state)[0]\n}\n\n#[no_predicates]\npub fn hash_9(input: [Field; 9]) -> Field {\n    let mut state = [0; 10];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_10(state)[0]\n}\n\n#[no_predicates]\npub fn hash_10(input: [Field; 10]) -> Field {\n    let mut state = [0; 11];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_11(state)[0]\n}\n\n#[no_predicates]\npub fn hash_11(input: [Field; 11]) -> Field {\n    let mut state = [0; 12];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_12(state)[0]\n}\n\n#[no_predicates]\npub fn hash_12(input: [Field; 12]) -> Field {\n    let mut state = [0; 13];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_13(state)[0]\n}\n\n#[no_predicates]\npub fn hash_13(input: [Field; 13]) -> Field {\n    let mut state = [0; 14];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_14(state)[0]\n}\n\n#[no_predicates]\npub fn hash_14(input: [Field; 14]) -> Field {\n    let mut state = [0; 15];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_15(state)[0]\n}\n\n#[no_predicates]\npub fn hash_15(input: [Field; 15]) -> Field {\n    let mut state = [0; 16];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_16(state)[0]\n}\n\n#[no_predicates]\npub fn hash_16(input: [Field; 16]) -> Field {\n    let mut state = [0; 17];\n    for i in 0..input.len() {\n        state[i + 1] = input[i];\n    }\n\n    perm::x5_17(state)[0]\n}\n","path":"std/hash/poseidon/bn254.nr"},"25":{"source":"pub mod bn254; // Instantiations of Poseidon for prime field of the same order as BN254\nuse crate::default::Default;\nuse crate::hash::Hasher;\n\n// A config struct defining the parameters of the Poseidon instance to use.\n//\n// A thorough writeup of this method (along with an unoptimized method) can be found at: https://spec.filecoin.io/algorithms/crypto/poseidon/\npub struct PoseidonConfig<let T: u32, let N: u32, let X: u32> {\n    // State width, should be equal to `T`\n    t: Field,\n    // Number of full rounds. should be even\n    rf: u8,\n    // Number of partial rounds\n    rp: u8,\n    // S-box power; depends on the underlying field\n    alpha: Field,\n    // The round constants for the\n    round_constants: [Field; N],\n    // The MDS matrix for the Poseidon instance\n    mds: [[Field; T]; T],\n    // An MDS matrix which also applies a basis transformation which allows\n    // sparse matrices to be used for the partial rounds.\n    //\n    // This should be applied instead of `mds` in the final full round.\n    presparse_mds: [[Field; T]; T],\n    // A set of sparse matrices used for MDS mixing for the partial rounds.\n    sparse_mds: [Field; X],\n}\n\npub fn config<let T: u32, let N: u32, let X: u32>(\n    t: Field,\n    rf: u8,\n    rp: u8,\n    alpha: Field,\n    round_constants: [Field; N],\n    mds: [[Field; T]; T],\n    presparse_mds: [[Field; T]; T],\n    sparse_mds: [Field; X],\n) -> PoseidonConfig<T, N, X> {\n    // Input checks\n    assert_eq(rf & 1, 0);\n    assert_eq((t as u8) * rf + rp, N as u8);\n    assert_eq(t, T as Field);\n    assert(alpha != 0);\n\n    PoseidonConfig { t, rf, rp, alpha, round_constants, mds, presparse_mds, sparse_mds }\n}\n\npub fn permute<let T: u32, let N: u32, let X: u32>(\n    pos_conf: PoseidonConfig<T, N, X>,\n    mut state: [Field; T],\n) -> [Field; T] {\n    let PoseidonConfig { t, rf, rp, alpha, round_constants, mds, presparse_mds, sparse_mds } =\n        pos_conf;\n\n    for i in 0..state.len() {\n        state[i] += round_constants[i];\n    }\n\n    for _r in 0..rf / 2 - 1 {\n        state = sigma(state);\n        for i in 0..T {\n            state[i] += round_constants[T * (_r + 1) as u32 + i];\n        }\n        state = apply_matrix(mds, state);\n    }\n\n    state = sigma(state);\n    for i in 0..T {\n        state[i] += round_constants[T * (rf / 2) as u32 + i];\n    }\n    state = apply_matrix(presparse_mds, state);\n\n    for i in 0..T {\n        crate::as_witness(state[i]);\n    }\n\n    for _r in 0..rp {\n        state[0] = state[0].pow_32(alpha);\n        state[0] += round_constants[(rf / 2 + 1) as u32 * T + _r as u32];\n        crate::as_witness(state[0]);\n        {\n            let mut newState0 = 0;\n            for j in 0..T {\n                newState0 += sparse_mds[(T * 2 - 1) * _r as u32 + j as u32] * state[j];\n            }\n            for k in 1..T {\n                state[k] += state[0] * sparse_mds[(t * 2 - 1) as u32 * _r as u32 + T + k - 1];\n            }\n            state[0] = newState0;\n\n            if (_r & 1 == 0) {\n                for k in 1..T {\n                    crate::as_witness(state[k]);\n                }\n            }\n        }\n    }\n\n    for _r in 0..rf / 2 - 1 {\n        state = sigma(state);\n        for i in 0..state.len() {\n            state[i] += round_constants[(rf / 2 + 1) as u32 * T + rp as u32 + (_r as u32) * T + i];\n        }\n        state = apply_matrix(mds, state);\n    }\n\n    state = sigma(state);\n    state = apply_matrix(mds, state);\n\n    state\n}\n\n// Performs matrix multiplication on a vector\nfn apply_matrix<let N: u32>(matrix: [[Field; N]; N], vec: [Field; N]) -> [Field; N] {\n    let mut out = [0; N];\n\n    for i in 0..N {\n        for j in 0..N {\n            out[i] += vec[j] * matrix[j][i];\n        }\n    }\n\n    out\n}\n\n// Corresponding absorption.\nfn absorb<let T: u32, let N: u32, let X: u32, let O: u32>(\n    pos_conf: PoseidonConfig<T, N, X>,\n    // Initial state; usually [0; O]\n    mut state: [Field; T],\n    rate: Field,\n    capacity: Field,\n    msg: [Field; O], // Arbitrary length message\n) -> [Field; T] {\n    assert_eq(pos_conf.t, rate + capacity);\n\n    let mut i = 0;\n\n    for k in 0..msg.len() {\n        // Add current block to state\n        state[capacity + i] += msg[k];\n        i = i + 1;\n        // Enough to absorb\n        if i == rate {\n            state = permute(pos_conf, state);\n            i = 0;\n        }\n    }\n    // If we have one more block to permute\n    if i != 0 {\n        state = permute(pos_conf, state);\n    }\n\n    state\n}\n\nfn sigma<let O: u32>(x: [Field; O]) -> [Field; O] {\n    let mut y = x;\n    for i in 0..O {\n        let t = y[i];\n        let tt = t * t;\n        let tttt = tt * tt;\n        y[i] *= tttt;\n    }\n    y\n}\n\npub struct PoseidonHasher {\n    _state: [Field],\n}\n\nimpl Hasher for PoseidonHasher {\n    #[field(bn254)]\n    fn finish(self) -> Field {\n        let mut result = 0;\n        let len = self._state.len();\n        assert(len < 16);\n        if len == 1 {\n            result = bn254::hash_1([self._state[0]]);\n        }\n        if len == 2 {\n            result = bn254::hash_2([self._state[0], self._state[1]]);\n        }\n        if len == 3 {\n            result = bn254::hash_3([self._state[0], self._state[1], self._state[2]]);\n        }\n        if len == 4 {\n            result = bn254::hash_4([self._state[0], self._state[1], self._state[2], self._state[3]]);\n        }\n        if len == 5 {\n            result = bn254::hash_5([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n            ]);\n        }\n        if len == 6 {\n            result = bn254::hash_6([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n            ]);\n        }\n        if len == 7 {\n            result = bn254::hash_7([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n                self._state[6],\n            ]);\n        }\n        if len == 8 {\n            result = bn254::hash_8([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n                self._state[6],\n                self._state[7],\n            ]);\n        }\n        if len == 9 {\n            result = bn254::hash_9([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n                self._state[6],\n                self._state[7],\n                self._state[8],\n            ]);\n        }\n        if len == 10 {\n            result = bn254::hash_10([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n                self._state[6],\n                self._state[7],\n                self._state[8],\n                self._state[9],\n            ]);\n        }\n        if len == 11 {\n            result = bn254::hash_11([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n                self._state[6],\n                self._state[7],\n                self._state[8],\n                self._state[9],\n                self._state[10],\n            ]);\n        }\n        if len == 12 {\n            result = bn254::hash_12([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n                self._state[6],\n                self._state[7],\n                self._state[8],\n                self._state[9],\n                self._state[10],\n                self._state[11],\n            ]);\n        }\n        if len == 13 {\n            result = bn254::hash_13([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n                self._state[6],\n                self._state[7],\n                self._state[8],\n                self._state[9],\n                self._state[10],\n                self._state[11],\n                self._state[12],\n            ]);\n        }\n        if len == 14 {\n            result = bn254::hash_14([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n                self._state[6],\n                self._state[7],\n                self._state[8],\n                self._state[9],\n                self._state[10],\n                self._state[11],\n                self._state[12],\n                self._state[13],\n            ]);\n        }\n        if len == 15 {\n            result = bn254::hash_15([\n                self._state[0],\n                self._state[1],\n                self._state[2],\n                self._state[3],\n                self._state[4],\n                self._state[5],\n                self._state[6],\n                self._state[7],\n                self._state[8],\n                self._state[9],\n                self._state[10],\n                self._state[11],\n                self._state[12],\n                self._state[13],\n                self._state[14],\n            ]);\n        }\n\n        result\n    }\n\n    #[inline_always]\n    fn write(&mut self, input: Field) {\n        self._state = self._state.push_back(input);\n    }\n}\n\nimpl Default for PoseidonHasher {\n    fn default() -> Self {\n        PoseidonHasher { _state: &[] }\n    }\n}\n\nmod poseidon_tests {\n    use crate::hash::poseidon;\n\n    #[test]\n    fn reference_impl_test_vectors() {\n        // hardcoded test vectors from https://extgit.iaik.tugraz.at/krypto/hadeshash/-/blob/master/code/test_vectors.txt\n        {\n            let mut state = [0, 1, 2];\n            let mut expected = [\n                0x115cc0f5e7d690413df64c6b9662e9cf2a3617f2743245519e19607a4417189a,\n                0x0fca49b798923ab0239de1c9e7a4a9a2210312b6a2f616d18b5a87f9b628ae29,\n                0x0e7ae82e40091e63cbd4f16a6d16310b3729d4b6e138fcf54110e2867045a30c,\n            ];\n            assert_eq(\n                expected,\n                poseidon::bn254::perm::x5_3(state),\n                \"Failed to reproduce output for [0, 1, 2]\",\n            );\n        }\n        {\n            let mut state = [0, 1, 2, 3, 4];\n            let mut expected = [\n                0x299c867db6c1fdd79dcefa40e4510b9837e60ebb1ce0663dbaa525df65250465,\n                0x1148aaef609aa338b27dafd89bb98862d8bb2b429aceac47d86206154ffe053d,\n                0x24febb87fed7462e23f6665ff9a0111f4044c38ee1672c1ac6b0637d34f24907,\n                0x0eb08f6d809668a981c186beaf6110060707059576406b248e5d9cf6e78b3d3e,\n                0x07748bc6877c9b82c8b98666ee9d0626ec7f5be4205f79ee8528ef1c4a376fc7,\n            ];\n            assert_eq(\n                expected,\n                poseidon::bn254::perm::x5_5(state),\n                \"Failed to reproduce output for [0, 1, 2, 3, 4]\",\n            );\n        }\n    }\n}\n","path":"std/hash/poseidon/mod.nr"},"62":{"source":"use dep::std;\n\nfn main(\n    doc_address: pub Field,\n    client_address: Field,\n    use_once: Field,\n    freq: Field,\n    med_details: [Field; 10],\n    med_hash: pub Field,\n    detail_hash: pub Field,\n    hashed_message: [u8; 32],\n    pub_key_x_solver: [u8; 32],\n    pub_key_y_solver: [u8; 32],\n    signature_solver: [u8; 64]\n){\n    let test_detail_hash = std::hash::poseidon::bn254::hash_4([doc_address, client_address, use_once, freq]);\n    assert(test_detail_hash == detail_hash);\n    let test_med_hash = std::hash::poseidon::bn254::hash_10(med_details);\n    assert(test_med_hash == med_hash);\n    let valid_signature = std::ecdsa_secp256k1::verify_signature(\n        pub_key_x_solver,\n        pub_key_y_solver,\n        signature_solver,\n        hashed_message,\n    );\n    assert(valid_signature);\n}\n\n","path":"/Users/viveksahu/Desktop/Proof-of-Med/noir-circuits/src/main.nr"}},"names":["main"],"brillig_names":[]}